stages:
  - START
  - BUILD
  - DEPLOY
  - DELETE

variables:
  APP_NAME: ${CI_PROJECT_NAME}
  NAMESAPCE: ibb     
  APP_PORT: 80
  APP_IMAGE: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHA
  REPLICAS: 1 

START:
   stage: START 
   variables:
     GIT_STRATEGY: none  
   script:            
    - echo $CI_PROJECT_NAME pipeline starting with commit $CI_COMMIT_SHA on branch $CI_COMMIT_REF_NAME
   when: manual   
   allow_failure: false
   tags:
     - docker-image-build   

BUILD:
  stage: BUILD
  script:   
    - chmod +x build.sh
    - ./build.sh $CI_COMMIT_REF_NAME
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY    
    - docker build -t $APP_IMAGE .
    - docker push $APP_IMAGE        
    - docker rmi $APP_IMAGE    
    # Cleanup
    - 'docker rm $(docker ps -a -q) || :' # Delete all stopped containers
    - 'docker rmi $(docker images -q --filter "dangling=true") || :' # Delete all untagged images    
    - docker image prune -f
  only:
    - test
    - master
  tags:
     - docker-image-build 

DEPLOY-TEST:
  stage: DEPLOY    
  script:        
    - envsubst '$${APP_NAME},$${NAMESAPCE},$${SERVICE_IP},$${APP_PORT},$${APP_IMAGE},$${REPLICAS},$${ENV}' < "k8/deployment.yaml" > "deployment.yaml"
    - kubectl apply -f deployment.yaml  
  only:
    - test    
  tags:
    - kube-deploy-test

DELETE-TEST:
  stage: DELETE    
  script:        
    - envsubst '$${APP_NAME},$${NAMESAPCE},$${SERVICE_IP},$${APP_PORT},$${APP_IMAGE},$${REPLICAS},$${ENV}' < "k8/deployment.yaml" > "deployment.yaml"
    - kubectl delete -f deployment.yaml 
  when: manual
  only:
    - test    
  tags:
    - kube-deploy-test

DEPLOY-PROD:
  stage: DEPLOY    
  script:        
    - envsubst '$${APP_NAME},$${NAMESAPCE},$${SERVICE_IP},$${APP_PORT},$${APP_IMAGE},$${REPLICAS},$${ENV}' < "k8/deployment.yaml" > "deployment.yaml"
    - kubectl apply -f deployment.yaml  
  only:    
    - master    
  tags:
    - kube-deploy-prod

DELETE-PROD:
  stage: DELETE    
  script:        
    - envsubst '$${APP_NAME},$${NAMESAPCE},$${SERVICE_IP},$${APP_PORT},$${APP_IMAGE},$${REPLICAS},$${ENV}' < "k8/deployment.yaml" > "deployment.yaml"
    - kubectl delete -f deployment.yaml 
  when: manual
  only:    
    - master
  tags:
    - kube-deploy-prod

# ---------------------------------------------------------------------------
.setup_env: &setup_env |
  # Auto DevOps variables and functions
  [[ "$TRACE" ]] && set -x

  function setupEnv() {    
    if [[ "${CI_BUILD_REF_NAME}" == master ]]; then
      export ENV=prod;
      export SERVICE_IP=$SERVICE_IP_PROD;
    else
      export ENV=test;
      export SERVICE_IP=$SERVICE_IP_TEST;
    fi    
  }

  setupEnv

before_script:
  - *setup_env 